// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/parsearticle.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	protos/parsearticle.proto

It has these top-level messages:
	ParseRequest
	ParseResponse
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ParseRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *ParseRequest) Reset()                    { *m = ParseRequest{} }
func (m *ParseRequest) String() string            { return proto.CompactTextString(m) }
func (*ParseRequest) ProtoMessage()               {}
func (*ParseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ParseRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ParseResponse struct {
	Title         string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Article       string `protobuf:"bytes,2,opt,name=article" json:"article,omitempty"`
	ServerMessage string `protobuf:"bytes,3,opt,name=server_message,json=serverMessage" json:"server_message,omitempty"`
}

func (m *ParseResponse) Reset()                    { *m = ParseResponse{} }
func (m *ParseResponse) String() string            { return proto.CompactTextString(m) }
func (*ParseResponse) ProtoMessage()               {}
func (*ParseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ParseResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParseResponse) GetArticle() string {
	if m != nil {
		return m.Article
	}
	return ""
}

func (m *ParseResponse) GetServerMessage() string {
	if m != nil {
		return m.ServerMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*ParseRequest)(nil), "protos.ParseRequest")
	proto.RegisterType((*ParseResponse)(nil), "protos.ParseResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ParseArticle service

type ParseArticleClient interface {
	ParseUrl(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error)
}

type parseArticleClient struct {
	cc *grpc.ClientConn
}

func NewParseArticleClient(cc *grpc.ClientConn) ParseArticleClient {
	return &parseArticleClient{cc}
}

func (c *parseArticleClient) ParseUrl(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error) {
	out := new(ParseResponse)
	err := grpc.Invoke(ctx, "/protos.ParseArticle/ParseUrl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ParseArticle service

type ParseArticleServer interface {
	ParseUrl(context.Context, *ParseRequest) (*ParseResponse, error)
}

func RegisterParseArticleServer(s *grpc.Server, srv ParseArticleServer) {
	s.RegisterService(&_ParseArticle_serviceDesc, srv)
}

func _ParseArticle_ParseUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParseArticleServer).ParseUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.ParseArticle/ParseUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParseArticleServer).ParseUrl(ctx, req.(*ParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ParseArticle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.ParseArticle",
	HandlerType: (*ParseArticleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ParseUrl",
			Handler:    _ParseArticle_ParseUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/parsearticle.proto",
}

func init() { proto.RegisterFile("protos/parsearticle.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0x2f, 0x48, 0x2c, 0x2a, 0x4e, 0x4d, 0x2c, 0x2a, 0xc9, 0x4c, 0xce, 0x49, 0xd5,
	0x03, 0x8b, 0x09, 0xb1, 0x41, 0xa4, 0x94, 0x14, 0xb8, 0x78, 0x02, 0x40, 0xb2, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0xa5, 0x45, 0x39, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x9c, 0x41, 0x20, 0xa6, 0x52, 0x1a, 0x17, 0x2f, 0x54, 0x45, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa,
	0x90, 0x08, 0x17, 0x6b, 0x49, 0x66, 0x49, 0x4e, 0x2a, 0x54, 0x11, 0x84, 0x23, 0x24, 0xc1, 0xc5,
	0x0e, 0xb5, 0x41, 0x82, 0x09, 0x2c, 0x0e, 0xe3, 0x0a, 0xa9, 0x72, 0xf1, 0x15, 0xa7, 0x16, 0x95,
	0xa5, 0x16, 0xc5, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x83, 0x15, 0xf0, 0x42,
	0x44, 0x7d, 0x21, 0x82, 0x46, 0x9e, 0x50, 0x97, 0x38, 0x42, 0xb5, 0x59, 0x72, 0x71, 0x80, 0xf9,
	0xa1, 0x45, 0x39, 0x42, 0x22, 0x10, 0x57, 0x17, 0xeb, 0x21, 0xbb, 0x55, 0x4a, 0x14, 0x4d, 0x14,
	0xe2, 0x3e, 0x25, 0x86, 0x24, 0x88, 0xe7, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xe9,
	0xf8, 0xdd, 0x00, 0x01, 0x00, 0x00,
}
